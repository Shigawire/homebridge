version: '2.4'

services:
  redis:
    build:
      context: .
      dockerfile: redis.Dockerfile
#     This is disallowed on balena, hence we build our own redis image
#    volumes:
#      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    network_mode: host
    ports:
      - "6379:6379"
  tailscale:
    image: tailscale/tailscale
    privileged: true
    network_mode: host
    environment:
      TS_HOSTNAME: zurich-homebridge
      TS_USERSPACE: true
      TS_AUTHKEY: $TS_AUTHKEY
      TS_SOCKET: /var/run/tailscale/tailscaled.sock
      TS_SOCKS5_SERVER: :1055
    volumes:
      - tailscale-socket:/var/run/tailscale
    healthcheck:
      test: ["CMD-SHELL", "tailscale --socket /var/run/tailscale/tailscaled.sock status"]
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 5s
  vpn_controller: &vpn
    build: .
    command: ["ruby", "/usr/local/bin/vpn_controller.rb"]
    privileged: true
    volumes:
      - tailscale-socket:/var/run/tailscale
    network_mode: host
    ports:
      - "4567:4567"
    environment:
      REDIS_URL: redis://localhost:6379/0
    depends_on:
      - tailscale
      - redis
  vpn_client:
    <<: *vpn
    command: ["/usr/local/bin/vpn_client.sh"]
  wireguard:
    image: ghcr.io/wg-easy/wg-easy
    environment:
      LANG: de
      PORT: 51821
      WG_PORT: 51820
      WG_HOST_: $WG_HOST
      PASSWORD_HASH: $PASSWORD_HASH
    ports:
      - "51821:51821/tcp"
      - "51820:51820/udp"
    network_mode: host
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    restart: unless-stopped
    volumes:
      - wireguard:/etc/wireguard

volumes:
  tailscale-socket:
  wireguard:
